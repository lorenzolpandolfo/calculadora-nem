from animal import Animal
from operations import Operations
from fisiologic_condition import Condition


# Weight loss - Dogs
DOG_LOSS_WEIGHT_MULTIPLIER = 64
DOG_LOSS_WEIGHT_EXPOENT = 0.75

# Weight loss - Cats
CAT_LOSS_WEIGHT_MULTIPLIER = 85
CAT_LOSS_WEIGHT_EXPOENT = 0.4



# Weight maintance - Dogs
RESTING_DOG_WEIGHT_MAINTANCE_KCAL = 70 
INACTIVE_DOG_WEIGHT_MAINTANCE_KCAL = 95
ACTIVE_DOG_WEIGHT_MAINTANCE_KCAL = 130

RESTING_DOG_WEIGHT_MAINTANCE_EXPOENT = 0.75 
INACTIVE_DOG_WEIGHT_MAINTANCE_EXPOENT = 0.75
ACTIVE_DOG_WEIGHT_MAINTANCE_EXPOENT = 0.75

# Weight maintance - Cats
INDOOR_CAT_WEIGHT_MAINTANCE_KCAL = 63.5
ACTIVE_CAT_WEIGHT_MAINTANCE_KCAL = 100
OBESE_CAT_WEIGHT_MAINTANCE_KCAL = 130

INDOOR_CAT_WEIGHT_MAINTANCE_EXPOENT = 0.67
ACTIVE_CAT_WEIGHT_MAINTANCE_EXPOENT = 0.67
OBESE_CAT_WEIGHT_MAINTANCE_EXPOENT = 0.4



# Menu constants
TITLE_MAIN = "Calculadora de Necessidade Energ√©tica\n"
TITLE_ANIMAL_SELECT = "Selecione o Animal:\n"
TITLE_SELECT_ANIMAL_WEIGHT = "\n[?] Qual o peso corporal do animal? "
TITLE_LOOP = "[?] Calcular novamente? (aperte ENTER para SIM)\n"

MENU_OPTIONS = [Operations.WEIGHT_MAINTENANCE, Operations.WEIGHT_REDUCE, Operations.WEIGHT_GAIN]

MENU_FISIOLOGIC_CONDITIONS = [Condition.ACTIVE, Condition.INACTIVE, Condition.RESTING, Condition.INDOOR, Condition.OBESE]
MENU_CAT_FISIOLOGIC_CONDITIONS = [Condition.ACTIVE, Condition.INDOOR, Condition.OBESE]
MENU_DOG_FISIOLOGIC_CONDITIONS = [Condition.RESTING, Condition.INACTIVE, Condition.ACTIVE]

ANIMALS = [Animal.CAT, Animal.DOG]
